package org.variantsync.diffdetective.analysis.strategies;

import org.apache.commons.io.output.CloseShieldOutputStream;
import org.tinylog.Logger;
import org.variantsync.diffdetective.datasets.Repository;
import org.variantsync.diffdetective.diff.CommitDiff;
import org.variantsync.diffdetective.util.IO;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Path;

/**
 * Collects all linegraph representations generated by an analysis and exports them at the end.
 * @author Paul Bittner
 */
public class AnalyzeAllThenExport extends AnalysisStrategy {
    private ByteArrayOutputStream lineGraphDestination;

    @Override
    public void start(Repository repo, Path outputPath) {
        super.start(repo, outputPath);
    }

    @Override
    public OutputStream onCommit(CommitDiff commit) {
        return new CloseShieldOutputStream(lineGraphDestination);
    }

    @Override
    public void end() {
        try (var finalDestination = IO.newBufferedOutputStream(outputPath)) {
            lineGraphDestination.writeTo(finalDestination);
        } catch (IOException e) {
            Logger.error(e);
        }
    }
}
